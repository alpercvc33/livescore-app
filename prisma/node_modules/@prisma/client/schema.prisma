// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String             @id @default(cuid())
  name              String?
  email             String?            @unique
  emailVerified     DateTime?
  image             String?
  password          String?
  accounts          Account[]
  sessions          Session[]
  favoriteTeams     FavoriteTeam[]
  notificationPrefs NotificationPrefs?
  role              Role               @default(USER)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FavoriteTeam {
  id        String   @id @default(cuid())
  teamId    String
  userId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, teamId])
}

model NotificationPrefs {
  id                String  @id @default(cuid())
  userId            String  @unique
  matchStart        Boolean @default(true)
  goals             Boolean @default(true)
  halfTime          Boolean @default(true)
  fullTime          Boolean @default(true)
  redCards          Boolean @default(false)
  favoriteTeamsOnly Boolean @default(true)
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
